using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using M05JellyBellyJustinBarr;

namespace M05JellyBellyJustinBarr
{
    public partial class JellyBellyForm : Form
    {
        // Declaration of a readonly field db of type JBModel
        private readonly JBModel db;

        // Constructor for JellyBellyForm
        public JellyBellyForm()
        {
            // Initializes the components of the form (typically generated by the form designer)
            InitializeComponent();

            // Instantiates a new JBModel and assigns it to the readonly field db
            db = new JBModel();
        }

        // Event handler for the load event of the JellyBellyForm
        private void JellyBellyForm_Load(object sender, EventArgs e)
        {
            // Sets the DataSource of the DGVJellyBelly DataGridView to display jellyBellyFlavor and category from the database
            DGVJellyBelly.DataSource = db.JellyBellies.Select(j => new { j.jellyBellyFlavor, j.category }).ToList();
        }

        // Event handler for the "Search" button click
        private void BTNSearch_Click(object sender, EventArgs e)
        {
            // Pulls products from the database based on user input in the TXTBoxSearch
            List<JellyBelly> beans = db.JellyBellies
                .Where(prod => prod.jellyBellyFlavor.Contains(TXTBoxSearch.Text))
                .ToList();

            // Updates the DataGridView (DGVJellyBelly) with the filtered list of products
            DGVJellyBelly.DataSource = beans;
        }

        // Event handler for the "Show All" button click
        private void BTNAll_Click(object sender, EventArgs e)
        {
            // Clears the search text box
            TXTBoxSearch.Text = string.Empty;

            // Retrieves all JellyBelly items from the database
            List<JellyBelly> allBeans = db.JellyBellies.ToList();

            // Updates the DataGridView with all JellyBelly items
            DGVJellyBelly.DataSource = allBeans;
        }

        // Event handler for the "Close" button click
        private void BTNClose_Click(object sender, EventArgs e)
        {
            // Closes the JellyBellyForm
            Close();
        }

        // Event handler for the text changed event of the search text box
        private void TXTBoxSearch_TextChanged(object sender, EventArgs e)
        {
            // Pulls products from the database based on user input in the TXTBoxSearch
            List<JellyBelly> beans = db.JellyBellies
                .Where(prod => prod.jellyBellyFlavor.Contains(TXTBoxSearch.Text))
                .ToList();

            // Updates the DataGridView (DGVJellyBelly) with the filtered list of products
            DGVJellyBelly.DataSource = beans;
        }

    }
}
